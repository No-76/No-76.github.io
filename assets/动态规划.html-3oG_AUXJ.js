import{_ as t,c as n,a,b as e,d as p,o as m}from"./app-BfuhGhH0.js";const l="/assets/SmartSelect_20241014_152901_Samsung%20Notes-C87Dy6DI.jpg",i={};function r(o,s){return m(),n("div",null,[s[0]||(s[0]=a("h1",{id:"动态规划",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#动态规划"},[a("span",null,"动态规划")])],-1)),s[1]||(s[1]=a("p",null,"动态规划的算法核心为明确dp[i]中dp和i代表的含义。",-1)),e(" more "),s[2]||(s[2]=p('<h2 id="数学方法求解动态规划" tabindex="-1"><a class="header-anchor" href="#数学方法求解动态规划"><span>数学方法求解动态规划</span></a></h2><h3 id="_96-不同的二叉搜索树" tabindex="-1"><a class="header-anchor" href="#_96-不同的二叉搜索树"><span>96.不同的二叉搜索树</span></a></h3><ul><li>题目：给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。</li><li>解法：找到的DP状态公式：</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>G</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mi>G</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> G(n)=\\sum_{i=1}^{n}G(i-1)\\cdot G(n-i) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></span></p><p>常规方法可直接根据该状态转移函数求解，现给出数学解法，其中涉及到<strong>卡塔兰数：</strong><br><img src="'+l+'" alt="" loading="lazy"><br> 直接根据该组合数求解即可。</p>',5))])}const h=t(i,[["render",r],["__file","动态规划.html.vue"]]),d=JSON.parse('{"path":"/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/F/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html","title":"动态规划","lang":"zh-CN","frontmatter":{"tittle":"动态规划","icon":"pen-to-square","date":"2024-10-13T00:00:00.000Z","category":["算法笔记"],"timeline":true,"tag":["算法"],"description":"动态规划的算法核心为明确dp[i]中dp和i代表的含义。","head":[["meta",{"property":"og:url","content":"https://github.com/No-76/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/F/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html"}],["meta",{"property":"og:site_name","content":"Lzy"}],["meta",{"property":"og:title","content":"动态规划"}],["meta",{"property":"og:description","content":"动态规划的算法核心为明确dp[i]中dp和i代表的含义。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-14T07:50:17.000Z"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2024-10-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-14T07:50:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态规划\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-14T07:50:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lzy\\",\\"url\\":\\"https://github.com/No-76\\"}]}"]]},"headers":[{"level":2,"title":"数学方法求解动态规划","slug":"数学方法求解动态规划","link":"#数学方法求解动态规划","children":[{"level":3,"title":"96.不同的二叉搜索树","slug":"_96-不同的二叉搜索树","link":"#_96-不同的二叉搜索树","children":[]}]}],"git":{"createdTime":1728892217000,"updatedTime":1728892217000,"contributors":[{"name":"GSpotMan","email":"964600114@qq.com","commits":1}]},"readingTime":{"minutes":0.65,"words":196},"filePathRelative":"算法笔记/F/动态规划.md","localizedDate":"2024年10月13日","excerpt":"\\n<p>动态规划的算法核心为明确dp[i]中dp和i代表的含义。</p>\\n","autoDesc":true}');export{h as comp,d as data};
